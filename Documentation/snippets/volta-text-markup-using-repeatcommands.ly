%% DO NOT EDIT this file manually; it is automatically
%% generated from LSR http://lsr.dsi.unimi.it
%% Make any changes in LSR itself, or in Documentation/snippets/new/ ,
%% and then run scripts/auxiliar/makelsr.py
%%
%% This file is in the public domain.
\version "2.14.2"

\header {
  lsrtags = "text, repeats, symbols-and-glyphs"

%% Translation of GIT committish: d5307870fe0ad47904daba73792c7e17b813737f
  texidocfr = "
La commande @code{\\repeat volta} permet d'indiquer facilement des
reprises.  Il est certains cas où l'adjonction d'un texte sous forme de
@code{\\markup} nécessite cependant de recourir à la propriété de
contexte @code{repeatCommands}.

Dans la mesure où l'argument de @code{repeatCommands} est constitué
d'une liste, le plus simple est de définir le texte dans une variable
qui sera ensuite incorporée dans la liste en respectant la syntaxe Scheme
@code{#(list (list 'volta texteIdentificateur))}.  Les commandes de
début et de fin de reprise peuvent s'ajouter séparément à la liste des
éléments.

"
  doctitlefr = "Indication de reprise avec texte grâce à repeatCommands"

  texidoc = "
Though volte are best specified using @code{\\repeat volta}, the
context property @code{repeatCommands} must be used in cases where the
volta text needs more advanced formatting with @code{\\markup}.


Since @code{repeatCommands} takes a list, the simplest method of
including markup is to use an identifier for the text and embed it in
the command list using the Scheme syntax @code{#(list (list 'volta
textIdentifier))}. Start- and end-repeat commands can be added as
separate list elements:

"
  doctitle = "Volta text markup using repeatCommands"
} % begin verbatim


voltaAdLib = \markup { 1. 2. 3... \text \italic { ad lib. } }

\relative c'' {
  c1
  \set Score.repeatCommands = #(list (list 'volta voltaAdLib) 'start-repeat)
  c4 b d e
  \set Score.repeatCommands = #'((volta #f) (volta "4.") end-repeat)
  f1
  \set Score.repeatCommands = #'((volta #f))
}
